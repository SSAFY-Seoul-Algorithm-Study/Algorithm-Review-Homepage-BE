[33mcommit b86149179529d74c09cf7a49aeae3e160c7cdfd1[m[33m ([m[1;36mHEAD -> [m[1;32madd-user-byjuho[m[33m)[m
Author: mongsuokki <wngh1698@naver.com>
Date:   Tue May 9 01:07:30 2023 +0900

    더 추 가

[1mdiff --git a/Algo/pom.xml b/Algo/pom.xml[m
[1mindex e768574..450ab54 100644[m
[1m--- a/Algo/pom.xml[m
[1m+++ b/Algo/pom.xml[m
[36m@@ -76,7 +76,7 @@[m
 			<groupId>org.apache.tomcat.embed</groupId>[m
 			<artifactId>tomcat-embed-jasper</artifactId>[m
 		</dependency>[m
[31m-		[m
[32m+[m
 		<dependency>[m
 			<groupId>commons-fileupload</groupId>[m
 			<artifactId>commons-fileupload</artifactId>[m
[36m@@ -91,6 +91,20 @@[m
 			<artifactId>springfox-boot-starter</artifactId>[m
 			<version>3.0.0</version>[m
 		</dependency>[m
[32m+[m		[32m<!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>com.google.code.gson</groupId>[m
[32m+[m			[32m<artifactId>gson</artifactId>[m
[32m+[m			[32m<version>2.8.9</version>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<!-- https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple -->[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>com.googlecode.json-simple</groupId>[m
[32m+[m			[32m<artifactId>json-simple</artifactId>[m
[32m+[m			[32m<version>1.1.1</version>[m
[32m+[m		[32m</dependency>[m
[32m+[m
[32m+[m
 	</dependencies>[m
 [m
 	<build>[m
[1mdiff --git a/Algo/src/main/java/com/Seoul5/Algo/controller/UserRestController.java b/Algo/src/main/java/com/Seoul5/Algo/controller/UserRestController.java[m
[1mindex 5996a46..97e8856 100644[m
[1m--- a/Algo/src/main/java/com/Seoul5/Algo/controller/UserRestController.java[m
[1m+++ b/Algo/src/main/java/com/Seoul5/Algo/controller/UserRestController.java[m
[36m@@ -1,8 +1,14 @@[m
 package com.Seoul5.Algo.controller;[m
 [m
[32m+[m[32mimport java.io.BufferedReader;[m
 import java.io.File;[m
 import java.io.IOException;[m
[32m+[m[32mimport java.io.InputStreamReader;[m
[32m+[m[32mimport java.net.HttpURLConnection;[m
[32m+[m[32mimport java.net.URL;[m
 import java.util.List;[m
[32m+[m[32mimport java.util.Timer;[m
[32m+[m[32mimport java.util.TimerTask;[m
 import java.util.regex.Pattern;[m
 [m
 import javax.servlet.http.HttpSession;[m
[36m@@ -27,6 +33,9 @@[m [mimport org.springframework.web.multipart.MultipartFile;[m
 [m
 import com.Seoul5.Algo.model.dto.User;[m
 import com.Seoul5.Algo.model.service.UserService;[m
[32m+[m[32mimport com.google.gson.JsonElement;[m
[32m+[m[32mimport com.google.gson.JsonObject;[m
[32m+[m[32mimport com.google.gson.JsonParser;[m
 [m
 import io.swagger.annotations.ApiOperation;[m
 [m
[36m@@ -34,9 +43,6 @@[m [mimport io.swagger.annotations.ApiOperation;[m
 @RequestMapping("/userapi")[m
 @CrossOrigin(origins = "*", methods = { RequestMethod.GET, RequestMethod.POST })[m
 public class UserRestController {[m
[31m-[m
[31m-	// 더 추가해야할 것[m
[31m-	// 백준Api와 연동해서 주단위로 solvedCnt 업데이트[m
 	[m
 	@Autowired[m
 	UserService us;[m
[36m@@ -44,6 +50,10 @@[m [mpublic class UserRestController {[m
 	@Autowired[m
 	ResourceLoader resLoader;[m
 	[m
[32m+[m	[32mBufferedReader rd;[m
[32m+[m	[32mStringBuilder sb;[m
[32m+[m[41m	[m
[32m+[m[41m	[m
 	@GetMapping("/list")[m
 	@ApiOperation(value = "등록된 모든 사용자 정보를 반환한다.", response = User.class)[m
 	public ResponseEntity<?> selectAll() {[m
[36m@@ -115,6 +125,42 @@[m [mpublic class UserRestController {[m
 		return new ResponseEntity<Void>(HttpStatus.OK);[m
 	}[m
 	[m
[31m-	[m
[31m-	[m
[32m+[m	[32m//1주일마다 업데이트를 합니당[m
[32m+[m	[32mprivate void weeklyupdate() {[m
[32m+[m		[32mTimer timer = new Timer();[m
[32m+[m		[32mTimerTask task = new TimerTask() {[m
[32m+[m			[32m@Override[m
[32m+[m			[32mpublic void run() {[m
[32m+[m				[32mList<User> users = us.selectAll();[m
[32m+[m				[32mfor(int i=0;i<users.size();i++) {[m
[32m+[m					[32mUser user = users.get(i);[m
[32m+[m			[32m        try {[m
[32m+[m			[32m            URL url = new URL("https://solved.ac/api/v3/user/show?handle="+user.getBOJid());[m
[32m+[m			[32m            String line;[m
[32m+[m			[32m            sb = new StringBuilder();[m
[32m+[m			[32m            HttpURLConnection conn = (HttpURLConnection) url.openConnection();[m
[32m+[m			[32m            conn.setRequestMethod("GET");[m
[32m+[m			[32m            conn.setRequestProperty("Content-type", "application/json; charset=UTF-8");[m
[32m+[m			[32m            if(conn.getResponseCode() >= 200 && conn.getResponseCode() <= 300) {[m
[32m+[m			[32m                rd = new BufferedReader(new InputStreamReader(conn.getInputStream(), "UTF-8"));[m
[32m+[m			[32m            } else {[m
[32m+[m			[32m                rd = new BufferedReader(new InputStreamReader(conn.getErrorStream(), "UTF-8"));[m
[32m+[m			[32m            }[m
[32m+[m			[32m            while ((line = rd.readLine()) != null) {[m
[32m+[m			[32m                sb.append(line);[m
[32m+[m			[32m            }[m
[32m+[m			[32m            rd.close();[m
[32m+[m			[32m            conn.disconnect();[m
[32m+[m			[32m            String text = sb.toString();[m
[32m+[m			[32m            JsonElement element = JsonParser.parseString(text);[m
[32m+[m			[32m            JsonObject object = element.getAsJsonObject();[m
[32m+[m			[32m            user.setSolvedCnt(object.get("solvedCount").getAsInt());[m
[32m+[m			[32m        } catch(Exception e) {[m
[32m+[m			[32m            e.printStackTrace();[m
[32m+[m			[32m        }[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m		[32m};[m
[32m+[m		[32mtimer.scheduleAtFixedRate(task, 0, 1000*60*60*24*7);[m
[32m+[m	[32m}[m
 }[m
